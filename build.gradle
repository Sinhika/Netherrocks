
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'java'

sourceCompatibility = version_java
targetCompatibility = version_java

def getVersionAppendage() {
    if (System.env.BUILD_NUMBER)
        return System.env.BUILD_NUMBER

    def proc = "git rev-parse --short HEAD".execute()
    proc.waitFor()
    return "DEV-" + proc.text.trim()
}

version = "${version_minecraft}-${version_mod}." + getVersionAppendage()
group= "alexndr.plugins"
archivesBaseName = "netherrocks"

minecraft {
    version = "${version_forge_long}"
    runDir = "run"
    replaceIn "ModInfo.java"
    replace "@MODVERSION@", "${project.version_mod}." + getVersionAppendage()
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = version_mappings
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", "${project.version_mod}." + getVersionAppendage()
    inputs.property "mcversion", project.minecraft.version 
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':"${project.version_mod}." + getVersionAppendage(), 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier "deobf"
}
artifacts {
    archives deobfJar
}

repositories {
  maven {
    // location of the maven that hosts JEI files
    url = "http://dvs1.progwml6.com/files/maven"
  }
}

dependencies {
  // compile against the JEI API
  deobfCompile "mezz.jei:jei_${version_minecraft}:${jei_version}"
  // at runtime, use the full JEI jar
  runtime "mezz.jei:jei_${version_minecraft}:${jei_version}"
}
